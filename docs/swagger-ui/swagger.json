{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Getir Case Api",
        "title": "GETIR CASE API",
        "contact": {},
        "version": "0.0.1"
    },
    "host": "getir-case-3p88.onrender.com",
    "basePath": "/",
    "paths": {
        "/api/filter_records": {
            "post": {
                "description": "filter records by date and total count range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filters"
                ],
                "summary": "Filter Records",
                "parameters": [
                    {
                        "description": "Date and Total Count Range",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecordRequests.FilterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RecordResponses.FilterResponse"
                        }
                    }
                }
            }
        },
        "/api/get_in_memory": {
            "get": {
                "description": "get value by key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "in_memory"
                ],
                "summary": "Get Value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MemoryMapResponses.KeyValue"
                        }
                    }
                }
            }
        },
        "/api/set_in_memory": {
            "post": {
                "description": "set value by key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "in_memory"
                ],
                "summary": "Set Value",
                "parameters": [
                    {
                        "description": "Date and Total Count Range",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MemoryRequests.KeyValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MemoryMapResponses.KeyValue"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "MemoryMapResponses.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "MemoryRequests.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "ben"
                },
                "value": {
                    "type": "string",
                    "example": "sametR"
                }
            }
        },
        "RecordRequests.FilterInput": {
            "type": "object",
            "required": [
                "endDate",
                "maxCount",
                "minCount",
                "startDate"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2018-02-02"
                },
                "maxCount": {
                    "type": "integer",
                    "example": 3000
                },
                "minCount": {
                    "type": "integer",
                    "example": 2700
                },
                "startDate": {
                    "type": "string",
                    "example": "2016-01-26"
                }
            }
        },
        "RecordResponses.FilterResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/responses.ResponseTypes"
                },
                "msg": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RecordFilterModel"
                    }
                }
            }
        },
        "models.RecordFilterModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "responses.ResponseTypes": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Success",
                "ParseJsonError",
                "ValidationError"
            ]
        }
    }
}